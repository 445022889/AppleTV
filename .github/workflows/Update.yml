name: 生成自用Apple TV直播列表

on:
  workflow_dispatch:
  push:
    path:
      - '.github/workflows/Update.yml'
  schedule:
    - cron: 0 */1 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: true
  TELEGRAM_NOTIFICATION_CONTENT: <b>📺 AppleTVライブチャンネルが更新しました！</b>
  SOURCE1: https://raw.githubusercontent.com/Kimentanm/aptv/master/m3u/iptv.m3u
  SOURCE1_NAME: source1.tmp
  SOURCEV6: https://raw.githubusercontent.com/YueChan/Live/main/IPTV.m3u
  SOURCEV6_NAME: source6.tmp
  SOURCE_NAME: source.tmp
  GROUP_NAME_CCTV: 央视
  GROUP_NAME_SATT: 卫视
  GROUP_NAME_JP: 日本
  GROUP_NAME_EN: 英文
  GROUP_NAME_SCI: 科教记录
  GROUP_NAME_HK: 香港
  GROUP_NAME_TW: 台湾
  GROUP_NAME_MO: 澳门
  GROUP_NAME_LOCAL: 地方
  GROUP_NAME_DIG: 数字
  HKTW_ADD: false

jobs:
  GenerateList:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    
    - name: 获取最新源
      run : |
        wget $SOURCE1 -O $SOURCE1_NAME
        wget $SOURCEV6 -O $SOURCEV6_NAME
    
    - name: 国内频道
      run : |
        awk '
        {
          gsub("\"央视","\"'"$GROUP_NAME_CCTV"'");
          gsub(/CCTV5.\"/,"CCTV5+体育赛事\"");
          gsub("\"电视指南","\"CCTV电视指南");
          if($0~/tvg-name=\"CCTV/) {gsub(/group-title=\"数字\"/, "group-title=\"'"$GROUP_NAME_CCTV"'\"")};
          if($0~/tvg-name=\"..卫视\".*tvg-logo/) {gsub("\"卫视","\"'"$GROUP_NAME_SATT"'")};
          if($0~/\#EXTM3U/) {print $0};
          if($0~/group-title=\"'"$GROUP_NAME_CCTV"'\"/ || $0~/group-title=\"'"$GROUP_NAME_SATT"'\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            print $0;
          };
        }
        ' $SOURCEV6_NAME>china6.tmp

        awk '
        {
          if($0~/\#EXTM3U/) {print $0};
          if($0~/group-title=\"央视IPV6\"/ || $0~/group-title=\"卫视IPV6\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub("央视IPV6","'"$GROUP_NAME_CCTV"'");
            gsub("\"卫视IPV6","\"'"$GROUP_NAME_SATT"'");
            gsub(/CCTV5.\"/,"CCTV5+体育赛事\"");
            print $0;
          };
        }
        ' $SOURCE1_NAME>china1.tmp
        
        awk '
        {
          if($0~/group-title=\"卫视\"/ && $0!~/tvg-name=\"..卫视\".*tvg-logo/) {gsub("\"卫视","\"'"$GROUP_NAME_LOCAL"'")};
          gsub("\"电视指南","\"CCTV电视指南");
          if($0!~/tvg-name=\"CCTV/) {gsub(/group-title=\"数字\"/, "group-title=\"'"$GROUP_NAME_DIG"'\"")};
          if(($0!~/tvg-name=\"CCTV/ && $0~/group-title=\"'"$GROUP_NAME_DIG"'\"/) || $0~/group-title=\"'"$GROUP_NAME_LOCAL"'\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            print $0;
          };
        }
        ' $SOURCEV6_NAME>Source/Digital.m3u

        cat china6.tmp china1.tmp > Source/China.m3u

    - name: 重新排序国内频道并更换透明图标
      run : |
        awk -F'"' '
        {
          info=$0;
          name=$4;
          gsub(/group-title=\"央视.*\"/, "group-title=\"'"$GROUP_NAME_CCTV"'\"");
          gsub(/group-title=\"卫视.*\"/, "group-title=\"'"$GROUP_NAME_SATT"'\"");
          # 到第一个空行为止 if(length(info)==0) {exit};
          if(info~/\#EXIT/) {exit};
          if(info~/综合/) {
            name="CCTV1\"";
            close("Source/China.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/China.m3u";
            cmd | getline churl;
            print churl;
            close(cmd);
            next;
          };
          if(info~/体育赛事/) {
            name="体育赛事";
            close("Source/China.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/China.m3u";
            cmd | getline churl;
            print churl;
            close(cmd);
            next;
          };
          if(info~/EXTINF/ && info!~/HaveURL/) {
            close("Source/China.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/China.m3u";
            cmd | getline churl;
            if(length(churl)==0) {
              print info;
              print churl;
            };
            close(cmd);
          };
        }
        ' ChannelList/China.list>China.tmp

        cat China.tmp Source/Digital.m3u > China.m3u

    - name: 日本频道
      run : |
        wget https://raw.githubusercontent.com/iptv-org/iptv/master/streams/jp.m3u -O japan.tmp
        awk '
        {
          if($0~/\"online\"/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub(/ \(.*p\)/,"");
            gsub(",TBS",",TBS TV");
            gsub(/\",/,"\" group-title=\"'"$GROUP_NAME_JP"'\",");
            print $0;
          };
        }
        ' japan.tmp>Source/Japan.m3u

        awk -F'"' '
        {
          info=$0;
          name=$4;
          print info;
          gsub(/group-title=\"..日本.*\"/, "group-title=\"'"$GROUP_NAME_JP"'\"");
          if(info~/EXTINF/ && info!~/URLARU/) {
            close("Source/Japan.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/Japan.m3u";
            cmd | getline churl;
            print churl;
            close(cmd);
          };
        }
        ' ChannelList/Japan.list>Japan.m3u

    - name: 英文频道
      run : |
        awk '
        {
          gsub("group-title=\"..英文.*\"","group-title=\"'"$GROUP_NAME_EN"'\"");
          print $0;
        }
        ' ChannelList/English.list>English.m3u

    - name: 科学记录频道
      run : |
        awk '
        {
          gsub("group-title=\"..科教.*\"","group-title=\"'"$GROUP_NAME_SCI"'\"");
          print $0;
        }
        ' ChannelList/Sciences.list>Sciencestmp1.m3u

        cat Sciencestmp*.m3u > Sciences.m3u

    - name: 生成AppleTV总列表
      run : |
        cat China.m3u Japan.m3u > IPTV.m3u
    
    - name: 删除临时文件
      run : |
        rm *.tmp
        rm *tmp*
        ls
    
    - name: 判断是否有变更
      if: (!cancelled())
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "STATUS="nochange"" >> $GITHUB_OUTPUT
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "STATUS="change"" >> $GITHUB_OUTPUT
        fi
    
    - name: 合并到仓库
      if: (!cancelled())
      run : |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin main
        fi

    - name: 移除workflow运行
      if: (!cancelled())
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${{ env.TELEGRAM_NOTIFICATION_CONTENT }}&parse_mode=HTML"
          # curl -d "text=📺 AppleTVライブチャンネル更新しました！" -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendmessage?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}"
        fi
        
