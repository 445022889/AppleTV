name: 生成自用Apple TV直播列表

on:
  push:
    branches:
      - beta
    path:
      - 'start'
  release:
    types: [published]
  schedule:
    - cron: 0 4,16 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  UPDATE_SOURCE: false
  TV_LIST: http://tv.sason.xyz/new.m3u
  TV_LIST_NAME: new.m3u
  TV_LIST0: http://tv.boye.ml/iptv/tv.m3u
  TV_LIST0_NAME: tv.m3u
  TV_LIST1: https://raw.githubusercontent.com/panda-mute/iptv/master/list.m3u
  TV_LIST1_NAME: list.m3u
  TV_LIST2: https://homenet6.github.io/list.m3u
  TV_LIST2_NAME: list2.m3u
  GLOBAL_LIST: https://raw.githubusercontent.com/hououinkami/AppleTV/master/Global.m3u
  GLOBAL_LIST_NAME: Global_tmp.m3u
  LIST_NAME_CCTV: A 央视频道
  LIST_NAME_SATT: B 卫视频道
  LIST_NAME_HK: C 香港频道
  LIST_NAME_MO: E 澳门频道
  LIST_NAME_TW: D 台湾频道
  LIST_NAME_JP: F 日本频道
  LIST_NAME_EN: G 英文频道
  LIST_NAME_SCI: H 科教记录
  LIST_NAME_MOV: I 电影轮播

jobs:
  GenerateList:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    
    - name: 获取最新源
      run : |
        wget $TV_LIST
        wget $TV_LIST1
        wget $GLOBAL_LIST -O $GLOBAL_LIST_NAME
        wget $TV_LIST2 -O $TV_LIST2_NAME
    
    - name: 国内频道(Sason源)
      run : >
        awk '
        {
        if($0~/\#EXTM3U/) {print $0};
        if($0~/央视"|卫视"/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          gsub("A.央视","'"$LIST_NAME_CCTV"'");
          gsub("B.卫视","'"$LIST_NAME_SATT"'");
          if($0~/深圳/) {gsub("tvg-id=\"[0-9]{1,2}\"","tvg-id=\"26\"")};
          gsub(" FHD| FHD版| HD| SD","")
          print $0;
          };
        }
        '
        $TV_LIST_NAME>China.m3u
    
    - name: 港澳台频道(Sason源)
      run : >
        awk '
        {
        gsub("url-tvg=\"http://tv.sason.xyz/epg\"", "");
        if($0~/\#EXTM3U/) {print $0};
        if($0~/香港"|台湾"|澳门"｜NHK华语视界/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          gsub("D.香港","'"$LIST_NAME_HK"'");
          gsub("E.台湾","'"$LIST_NAME_TW"'");
          gsub("F.澳门","'"$LIST_NAME_MO"'");
          gsub(" FHD","");
          if($0~/Discovery|地理|NationalGeographic/) {gsub("group-title=\"*\..*\"","group-title=\"'"$LIST_NAME_SCI"'\"")};
          if($0~/NHK华语视界/) {gsub("group-title=\"*\..*\"","group-title=\"'"$LIST_NAME_JP"'\"")};
          if($0~/FX Asia/) {gsub("group-title=\"*\..*\"","group-title=\"'"$LIST_NAME_MOV"'\"")};
          print $0;
          };
        }
        '
        $TV_LIST_NAME>HKTWtmp1.m3u
    
    - name: 香港频道补全
      run : |
        awk '
        {
        if($0~/IPV6|备/) {a=NR; b=NR+1};
        if(a<=NR && NR<=b) {next};
        if($0~/"翡翠台"|"明珠台"|探索|动物|地理|Warner|FOX|好莱坞|"体育频道"|"News"/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          if($0~/"翡翠台"|"明珠台"/) {gsub("港台频道","'"$LIST_NAME_HK"'")};
          if($0~/探索|动物|地理/) {gsub("港台频道","'"$LIST_NAME_SCI"'")};
          if($0~/Warner|FOX|好莱坞/) {gsub("港台频道","'"$LIST_NAME_MOV"'")};
          if($0~/"体育频道"|"News"/) {gsub("group-title=\"*\..*\"","group-title=\"'"$LIST_NAME_EN"'\"")};
          print $0;
          };
        }
        ' $TV_LIST1_NAME>HKTWtmp2.m3u
        awk '
        {
        if($0~/备/) {a=NR; b=NR+1};
        if(a<=NR && NR<=b) {next};
        if($0~/无线新闻/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          gsub("港台频道","'"$LIST_NAME_HK"'");
          print $0;
          };
        }
        ' $TV_LIST2_NAME>HKTWtmp3.m3u

    - name: 生成港澳台频道文件
      run : cat HKTWtmp*.m3u > HKTW.m3u && rm HKTWtmp*.m3u

    - name: 国内频道（panda-mute源）
      if: env.UPDATE_SOURCE == 'true'
      run : >
        awk '
        {
        if($0~/\#EXTM3U/) {print $0};
        if($0~/\#(央视频道|卫视高清|卫视标清|央视频)/) {print $0};
        if($0~/"央视频道"|"卫视频道"|"央视频"/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          gsub("央视频道","'"$LIST_NAME_CCTV"'");
          if($0~/"CHC/) {next};
          gsub("卫视频道","'"$LIST_NAME_SATT"'");
          # if($0~/"央视频".*CCTV4K/ ) {gsub("\"CCTV4\"","\"CCTV4K\""); gsub("www.tvyan.com/uploads/dianshi/cctv4k.jpg","epg.51zmt.top:8000/tb1/CCTV/CCTV4k.png")};
          # if($0~/"央视频".*(CCTV|CGTN)/ ) {gsub("央视频","'"$LIST_NAME_CCTV"'*")};
          # if($0~/"央视频".*卫视/) {gsub("央视频","'"$LIST_NAME_SATT"'*")};
          gsub("http://218.98.46.179/live-cnc-cdn.ysp.cctv.cn/ysp","http://live-aba-cdn.ysp.cctv.cn/tlivecloud-cdn.ysp.cctv.cn/001")
          print $0;
          };
        }
        '
        $TV_LIST1_NAME>China_YSP.m3u
    
    - name: 港台频道（panda-mute源）
      if: env.UPDATE_SOURCE == 'true'
      run : >
        awk '
        {
        if($0~/\#EXTM3U/) {print $0};
        if($0~/\#港台频道/) {print $0};
        if($0~/"港台频道"/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {
          if($0~/东森|华视|民视|台视|中视|公视|三立|中天|纬来|壹新闻|博斯|大爱|台湾|信吉|年代|八大|TVBS/) {gsub("港台频道","'"$LIST_NAME_TW"'")};
          if($0~/凤凰|TVB|有线|香港|星空|阳光|Now|RTHK|开|无线|RHK|C\+/) {gsub("港台频道","'"$LIST_NAME_HK"'")};
          if($0~/探索|动物|地理/) {gsub("港台频道","'"$LIST_NAME_SCI"'")};
          if($0~/Warner|FOX|好莱坞/) {gsub("港台频道","'"$LIST_NAME_MOV"'")};
          if($0~/"体育频道"|"新闻频道"/) {gsub("港台频道","'"$LIST_NAME_EN"'")};
          print $0
          };
        }
        '
        $TV_LIST1_NAME>HKTW_panda.m3u

    - name: 外文频道
      run : >
        awk '
        {
        gsub("group-title=\"..日本.*\"","group-title=\"'"$LIST_NAME_JP"'\"");
        gsub("group-title=\"..英文.*\"","group-title=\"'"$LIST_NAME_EN"'\"");
        gsub("group-title=\"..科教.*\"","group-title=\"'"$LIST_NAME_SCI"'\"");
        print $0;
        }
        '
        $GLOBAL_LIST_NAME>Global.m3u
    
    - name: 删除源文件
      run : |
        rm $TV_LIST_NAME
        rm $TV_LIST1_NAME
        rm $GLOBAL_LIST_NAME
        rm $TV_LIST2_NAME
        ls
    - name: 判断是否有变更
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "::set-output name=status::"nochange""
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "::set-output name=status::"change""
        fi
    
    - name: 合并到仓库
      run : |
        if [[ "${{steps.status.outputs.status}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.date}}"
          git push origin master
        fi
        
