name: 生成自用Apple TV直播列表

on:
  # push:
    # branches: 
      # - master
  schedule:
    - cron: 07 01 * * *
  watch:
    types: [started]

jobs:
  TV:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 0
        lfs: true
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    - name: 获取当前日期
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: 获取最新源
      run : |
        wget http://tv.sason.xyz/gn.m3u
        wget http://tv.sason.xyz/gt.m3u
        wget https://homenet6.github.io/list.m3u
    - name: 国内频道
      run : >
        awk '
        {
        gsub("url-tvg=\"http://tv.sason.xyz/epg\"", "");
        if($0~"说明") {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {next};
        gsub("A.央视","A 央视频道");
        gsub("B.卫视","B 卫视频道");
        gsub("C.4K频道","Z 4K频道");
        gsub("D.教育频道","C 教育频道");
        gsub("E.数字电视","D 数字电视");
        if($0~/峨眉|四川本地/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {next};
        gsub("FHD|HD|SD","");
        print $0;
        }
        '
        gn.m3u>China.m3u
    - name: 港台频道1
      run : >
        awk '
        {
        gsub("url-tvg=\"http://tv.sason.xyz/epg\"", "");
        if($0~"说明") {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {next};
        if($0~/凤凰|TVB|有线|香港|星空|阳光|Now|RTHK|开|C\+/) {gsub("group-title=\"*\..*\"","group-title=\"E 香港频道\"")};
        if($0~/东森|华视|民视|台视|中视|三立|中天|纬来|壹新闻|博斯|大爱/) {gsub("group-title=\"*\..*\"","group-title=\"F 台湾频道\"")};
        if($0~/澳|莲花|有线/) {gsub("group-title=\"*\..*\"","group-title=\"G 澳门频道\"")};
        if($0~/NHK/) {gsub("group-title=\"*\..*\"","group-title=\"H 日本频道\"")};
        gsub("group-title=\"*N\..*\"","group-title=\"I 电影剧集\"");
        gsub("group-title=\"*O\..*\"","group-title=\"J 科教记录\"");
        if($0~/新加坡|亚旅/) {gsub("group-title=\"*\..*\"","group-title=\"X 其他频道\"")};
        gsub("FHD|HD","高清");
        gsub(/\[.*语.*\] | ★| \(SD\)/, "");
        print $0
        }
        '
        gt.m3u>HKTW1.m3u
    - name: 港台频道2
      run : >
        awk '
        {
        if($0~/央视频道|卫视频道|反馈|佳片赏析|余庆年/) {m=NR; n=NR+1};
        if(m<=NR && NR<=n) {next};
        if($0~/凤凰|TVB|有线|香港|星空|阳光|Now|RTHK|开|无线|RHK/) {gsub("group-title=\"*\..*\"","group-title=\"E 香港频道\"")};
        if($0~/澳|莲花|有线/) {gsub("group-title=\"*\..*\"","group-title=\"G 澳门频道\"")};
        if($0~/探索|动物|地理/) {gsub("group-title=\"*\..*\"","group-title=\"J 科教记录\"");};
        gsub("精彩4K","Z 4K频道");
        if($0~/东森|华视|民视|台视|中视|三立|中天|纬来|壹新闻|博斯|大爱|C\+|台湾|信吉|年代|八大/) {gsub("group-title=\"*\..*\"","group-title=\"F 台湾频道\"")};
        if($0~/电影|Warner/) {gsub("group-title=\"*\..*\"","group-title=\"I 电影剧集\"")};
        if($0~/DOX/) {gsub("DOX轮播","I 电影剧集")};
        print $0
        }
        '
        list.m3u>HKTW2.m3u
    - name: 删除源文件
      run : |
        rm gn.m3u
        rm gt.m3u
        rm list.m3u
        ls
    - name: 判断是否有变更
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "::set-output name=status::"nochange""
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "::set-output name=status::"change""
        fi
    - name: 合并到仓库
      run : |
        if [[ "${{steps.status.outputs.status}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.date}}"
          git push origin master
        fi
        
